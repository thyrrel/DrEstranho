# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃ 🔮 genesis.yml - Ritual de geração de artefatos por receita individual     ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

name: Genesis Ritual

on:
  push:
    branches:
      - main
    paths:
      - 'recipes/**'
      - 'bin/tutor.dart'
      - 'lib/tutor/**'
      - '.github/workflows/genesis.yml'

jobs:
  preparar_matrix:
    runs-on: ubuntu-latest
    outputs:
      arquivos: ${{ steps.listar.outputs.arquivos }}
    steps:
      - name: 📦 Checkout do grimório
        uses: actions/checkout@v3

      - name: 📜 Listar arquivos em /recipes/
        id: listar
        run: |
          echo ">>> Vasculhando receitas..."
          ls -R recipes || echo "⚠️ Nenhuma receita encontrada!"
          
          ARTEFATOS=$(find recipes -type f -name '*.txt' | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "Arquivos detectados: $ARTEFATOS"
          echo "arquivos=$ARTEFATOS" >> $GITHUB_OUTPUT

  gerar_artefatos:
    needs: preparar_matrix
    runs-on: ubuntu-latest
    if: ${{ needs.preparar_matrix.outputs.arquivos != '[]' }}
    strategy:
      matrix:
        arquivo: ${{ fromJson(needs.preparar_matrix.outputs.arquivos) }}

    steps:
      - name: 📦 Checkout do grimório
        uses: actions/checkout@v3

      - name: 🧙 Instalar Dart
        uses: dart-lang/setup-dart@v1

      - name: 📦 Instalar dependências
        run: dart pub get

      - name: 🔮 Gerar artefato para ${{ matrix.arquivo }}
        run: dart run bin/tutor.dart ${{ matrix.arquivo }}

      - name: 📁 Mover artefato para LIMBO
        run: |
          nome=$(basename "${{ matrix.arquivo }}" .txt)
          mkdir -p lib/limbo/
          mv artefatos/$nome.dart lib/limbo/ || echo "⚠️ Artefato não encontrado"
