# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃ 🔮 genesis.yml - Ritual de geração, validação e promoção de artefatos      ┃
# ┃ 📜 Estilo byThyrrel | Fluxo completo | Push autorizado via PERSONAL_TOKEN ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

name: Genesis Ritual

on:
  push:
    branches: [Tutor-Demoníaco]
    paths: [recipe/**, bin/genesis.dart, .github/workflows/genesis.yml]
  workflow_dispatch:

jobs:
  artefato:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dart-lang/setup-dart@v1
      - run: dart pub get
      - run: dart run bin/genesis.dart
      - uses: actions/upload-artifact@v4
        with:
          name: artefatos
          path: artefatos/

  movendo_artefato:
    needs: artefato
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: artefatos
          path: artefatos/
      - run: |
          mkdir -p lib/limbo
          for f in artefatos/*.dart; do
            [ -f "$f" ] && cp "$f" lib/limbo/
          done

  testes:
    needs: movendo_artefato
    runs-on: ubuntu-latest
    steps:
      - name: Checkout da branch LIMBO
        uses: actions/checkout@v4
        with:
          ref: LIMBO

      - name: Baixar artefatos
        uses: actions/download-artifact@v4
        with:
          name: artefatos
          path: artefatos/

      - name: Validar artefatos e mover falhos para LIMBO/lib/infernus
        run: |
          mkdir -p lib/infernus
          for f in artefatos/*.dart; do
            if [ -f "$f" ] && ! dart analyze --fatal-infos "$f"; then
              nome=$(basename "$f" .dart)
              cp "$f" lib/infernus/
            fi
          done

      - name: Commitar falhos na branch LIMBO
        env:
          TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: |
          git config --global user.name "ritual-bot"
          git config --global user.email "ritual@bot.com"
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/thyrrel/DrEstranho.git
          git add lib/infernus/
          git commit -m "⚠️ Artefatos falhos movidos para infernus"
          git push origin LIMBO

      - name: Checkout da branch Tutor-Demoníaco
        uses: actions/checkout@v4
        with:
          ref: Tutor-Demoníaco

      - name: Renomear rituais falhos em recipe/
        env:
          TOKEN: ${{ secrets.PERSONAL_TOKEN }}
        run: |
          for f in artefatos/*.dart; do
            nome=$(basename "$f" .dart)
            if [ -f "recipe/$nome.txt" ] && ! dart analyze --fatal-infos "$f"; then
              mv "recipe/$nome.txt" "recipe/${nome}_infernus"
            fi
          done
          git config --global user.name "ritual-bot"
          git config --global user.email "ritual@bot.com"
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/thyrrel/DrEstranho.git
          git add recipe/
          git commit -m "⚠️ Rituais falhos marcados como infernus"
          git push origin Tutor-Demoníaco

  valido:
    needs: testes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          mkdir -p .github/workflows
          echo "# Novo job para artefato gerado" >> .github/workflows/conjurafor.yml

  ok:
    needs: valido
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: artefatos
          path: artefatos/
      - run: |
          mkdir -p instrumento ritual extraplanar
          for f in artefatos/*.dart; do
            [ -f "$f" ] && cp "$f" instrumento/ && cp "$f" ritual/ && cp "$f" extraplanar/
          done
      - run: |
          for f in artefatos/*.dart; do
            [ -f "$f" ] && echo "- $(basename "$f" .dart)" >> README.md
          done
      - uses: actions/upload-artifact@v4
        with:
          name: artefatos-finais
          path: |
            instrumento/
            ritual/
            extraplanar/

# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃ 📌 Sugestões futuras                                                       ┃
# ┃ 🛡️ Verificação de duplicidade antes da promoção                           ┃
# ┃ 🔄 Mecanismo de rollback para artefatos corrompidos                        ┃
# ┃ 📦 Publicação como release ou pacote externo                              ┃
# ┃ 🧩 Aprovação manual para artefatos críticos                               ┃
# ┃ 🎨 Badges visuais no README para artefatos aprovados                      ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

# ✍️ byThyrrel  
# 💡 Workflow selado com estilo técnico, seguro e elegante  
# 🧪 Ideal para conjuradores de código com foco em automação limpa e confiável
