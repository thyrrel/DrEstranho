# ‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
# ‚îÉ ‚öôÔ∏è genesis.yml - Ritual completo: invoca√ß√£o, valida√ß√£o e destina√ß√£o final ‚îÉ
# ‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ

name: Genesis Ritual

on:
  push:
    paths:
      - 'Tutor-Demon√≠aco/recipes/**'
      - 'bin/genesis.dart'

jobs:
  invocacao_inicial:
    name: üîÆ Invoca√ß√£o Inicial
    runs-on: ubuntu-latest
    outputs:
      ritual: ${{ steps.definir.outputs.ritual }}
      nome: ${{ steps.definir.outputs.nome }}
    steps:
      - name: üì¶ Checkout do grim√≥rio
        uses: actions/checkout@v3

      - name: üßô Instalar Dart
        uses: dart-lang/setup-dart@v1

      - name: üì¶ Instalar depend√™ncias
        run: dart pub get

      - name: üîç Definir ritual e nome
        id: definir
        run: |
          ritual=$(find Tutor-Demon√≠aco/recipes -type f -name '*.txt' | head -n 1)
          nome=$(basename "$ritual" .txt)
          echo "ritual=$ritual" >> $GITHUB_OUTPUT
          echo "nome=$nome" >> $GITHUB_OUTPUT

      - name: üîß Gerar artefato
        run: |
          dart run bin/genesis.dart "${{ steps.definir.outputs.ritual }}"
          mkdir -p LIMBO/lib/limbo/
          mv "artefatos/${{ steps.definir.outputs.nome }}.dart" LIMBO/lib/limbo/

  validacao:
    name: üß™ Testes, Simula√ß√µes e Valida√ß√£o
    needs: invocacao_inicial
    runs-on: ubuntu-latest
    outputs:
      tipo: ${{ steps.tipo.outputs.tipo }}
    steps:
      - name: üì¶ Checkout do grim√≥rio
        uses: actions/checkout@v3

      - name: üß™ Validar artefato
        id: tipo
        run: |
          nome="${{ needs.invocacao_inicial.outputs.nome }}"
          artefato="LIMBO/lib/limbo/$nome.dart"
          ritual="${{ needs.invocacao_inicial.outputs.ritual }}"

          mkdir -p LIMBO/lib/infernus/

          dart analyze "$artefato" || STATUS=falhou

          if [ "$STATUS" = "falhou" ]; then
            mv "$artefato" LIMBO/lib/infernus/
            mv "$ritual" "Tutor-Demon√≠aco/recipes/${nome}infernus"
            echo "‚ùå Reprovado"
            exit 0
          fi

          tipo=$(grep "^tipo:" "$ritual" | cut -d':' -f2 | tr -d ' ')
          echo "tipo=$tipo" >> $GITHUB_OUTPUT
          echo "‚úÖ Aprovado: tipo ‚Üí $tipo"

  destino_final:
    name: üöÄ Destino Final
    needs: [invocacao_inicial, validacao]
    runs-on: ubuntu-latest
    if: needs.validacao.outputs.tipo != ''
    steps:
      - name: üì¶ Checkout do grim√≥rio
        uses: actions/checkout@v3

      - name: üìÅ Mover para branch final
        run: |
          nome="${{ needs.invocacao_inicial.outputs.nome }}"
          tipo="${{ needs.validacao.outputs.tipo }}"
          artefato="LIMBO/lib/limbo/$nome.dart"
          ritual="Tutor-Demon√≠aco/recipes/$nome.txt"

          mkdir -p Tutor-Demon√≠aco/recipes/acervo/
          mv "$ritual" "Tutor-Demon√≠aco/recipes/acervo/${nome}acervo"

          case "$tipo" in
            instrumento)
              git checkout Instrumentos-M√°gicos
              mkdir -p lib/instrumentos/
              mv "$artefato" lib/instrumentos/
              ;;
            grimorio)
              git checkout GRIMORIO
              mkdir -p lib/grimorio/
              mv "$artefato" lib/grimorio/
              ;;
            extraplanar)
              git checkout ExtraPlanares
              mkdir -p lib/extraplanares/
              mv "$artefato" lib/extraplanares/
              ;;
            *)
              echo "‚ö†Ô∏è Tipo desconhecido: $tipo"
              ;;
          esac

          git add .
          git commit -m "Artefato $nome promovido para $tipo"
          git push
