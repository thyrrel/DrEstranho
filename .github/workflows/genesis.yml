# ‚îè‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îì
# ‚îÉ üîÆ genesis.yml ‚Äì Ritual por ritual: artefato nomeado pelo .txt real         ‚îÉ
# ‚îÉ üìú byThyrrel | Jobs: Cria√ß√£o, Teleporte, Or√°culo, Selo, Ascens√£o          ‚îÉ
# ‚îÉ üßô L√™ de recipes/ na raiz | fail-fast false | IA local + Gemini fallback   ‚îÉ
# ‚îó‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îõ
name: Genesis Ritual

on:
  push:
    branches: [Tutor-Demon√≠aco]
    paths: [recipes/**, bin/genesis.dart, .github/workflows/genesis.yml]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  criacao:
    name: Cria√ß√£o
    runs-on: ubuntu-latest
    outputs:
      rituais: ${{ steps.set.outputs.rituais }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: Tutor-Demon√≠aco
      - id: set
        run: |
          echo "=== Arquivos .txt em recipes/ ==="
          ls -la recipes/*.txt 2>/dev/null || echo "NENHUM .txt encontrado"
          echo "================================="
          printf '[' > rituais.json
          first=1
          for f in recipes/*.txt; do
            [ -e "$f" ] || continue
            name=$(basename "$f" .txt)
            [ $first -eq 0 ] && printf ',' >> rituais.json
            printf '"%s"' "$name" >> rituais.json
            first=0
          done
          printf ']' >> rituais.json
          echo "Conte√∫do final:" && cat rituais.json
          echo "rituais=$(cat rituais.json)" >> $GITHUB_OUTPUT

  teleporte:
    name: Teleporte
    needs: criacao
    if: needs.criacao.outputs.rituais != '[]'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ritual: ${{ fromJson(needs.criacao.outputs.rituais) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: Tutor-Demon√≠aco
      - uses: dart-lang/setup-dart@v1
      - run: dart pub get
      - run: dart run bin/genesis.dart
      - name: Garantir artefato (mesmo vazio se falhar)
        run: |
          [ -f rituais/${{ matrix.ritual }}.dart ] || echo "// placeholder" > rituais/${{ matrix.ritual }}.dart
      - name: Upload artefato na PASTA rituais/
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.ritual }}
          path: rituais/${{ matrix.ritual }}.dart
          retention-days: 1

  oraculo:
    name: Or√°culo
    needs: [criacao, teleporte]
    if: needs.criacao.outputs.rituais != '[]'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ritual: ${{ fromJson(needs.criacao.outputs.rituais) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: LIMBO
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.ritual }}
          path: lib/limbo/
      - run: |
          mkdir -p lib/infernus
          if ! dart analyze --fatal-infos lib/limbo/${{ matrix.ritual }}.dart; then
            cp lib/limbo/${{ matrix.ritual }}.dart lib/infernus/
            git config user.name "ritual-bot"
            git config user.email "ritual@bot.com"
            git add lib/infernus/${{ matrix.ritual }}.dart
            echo "- ${{ matrix.ritual }} (infernus: $(date))" >> README.md
            git add README.md
            git commit -m "‚ö†Ô∏è ${{ matrix.ritual }} enviado ao infernus"
            git push origin LIMBO
          fi
      - name: Renomear original para _infernus em Tutor-Demon√≠aco
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const nome = '${{ matrix.ritual }}';
            await github.rest.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: `recipes/${nome}_infernus`,
              message: `‚ö†Ô∏è ${nome} marcado como infernus`,
              content: Buffer.from('').toString('base64'),
              branch: 'Tutor-Demon√≠aco'
            });
            const { data: txt } = await github.rest.repos.getContent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: `recipes/${nome}.txt`,
              ref: 'Tutor-Demon√≠aco'
            });
            await github.rest.repos.deleteFile({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: `recipes/${nome}.txt`,
              message: `üóëÔ∏è ${nome}.txt removido (infernus)`,
              branch: 'Tutor-Demon√≠aco',
              sha: txt.sha
            });

  selo:
    name: Selo
    needs: oraculo
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ritual: ${{ fromJson(needs.criacao.outputs.rituais) }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: Tutor-Demon√≠aco
      - uses: actions/download-artifact@v4
        with:
          name: ${{ matrix.ritual }}
          path: ritua
