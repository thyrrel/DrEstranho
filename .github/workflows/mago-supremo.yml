name: Invoca√ß√£o

on:
  workflow_dispatch:
    inputs:
      prompt_invocacao:
        description: 'Cole aqui o prompt com a tag {name}.txt'
        required: true
        type: string

jobs:
  invocacao-consagrada:
    name: Invoca√ß√£o Consagrada
    runs-on: ubuntu-latest
    outputs:
      artefato_nome: ${{ steps.extrair-nome.outputs.nome }}
      branch_destino: ${{ steps.verificar-destino.outputs.branch }}
    
    steps:
      - name: Checkout do reposit√≥rio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
      
      - name: Extrair nome do artefato
        id: extrair-nome
        run: |
          NOME=$(echo "${{ github.event.inputs.prompt_invocacao }}" | grep -oP '\{.*?\}\.txt' | tr -d '{}')
          echo "nome=$NOME" >> $GITHUB_OUTPUT
          echo "Nome do artefato: $NOME"
      
      - name: Executar Olho de Agamoto
        run: |
          dart bin/olhodeagamoto.dart "${{ github.event.inputs.prompt_invocacao }}"
      
      - name: Commit e Push para Tutor-Demon√≠aco/recipes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -B Tutor-Demon√≠aco/recipes
          git add .
          git commit -m "Invoca√ß√£o: ${{ steps.extrair-nome.outputs.nome }}"
          git push origin Tutor-Demon√≠aco/recipes --force
      
      - name: Verificar destino do artefato
        id: verificar-destino
        run: |
          # Aguarda processamento e verifica em qual branch o artefato chegou
          sleep 5
          for branch in Instrumentos-Magicos GRIMORIO ExtraPlanares; do
            if git ls-remote --heads origin $branch | grep -q $branch; then
              git fetch origin $branch
              if git diff --name-only origin/$branch | grep -q "${{ steps.extrair-nome.outputs.nome }}"; then
                echo "branch=$branch" >> $GITHUB_OUTPUT
                exit 0
              fi
            fi
          done
          echo "branch=none" >> $GITHUB_OUTPUT

  observando:
    name: Observando
    needs: invocacao-consagrada
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Checkout do reposit√≥rio
        uses: actions/checkout@v4
      
      - name: Monitorar progresso do artefato
        id: monitorar
        run: |
          echo "Observando artefato: ${{ needs.invocacao-consagrada.outputs.artefato_nome }}"
          
          # Simula monitoramento (voc√™ deve adaptar para sua l√≥gica real)
          TIMEOUT=300
          ELAPSED=0
          INTERVAL=10
          
          while [ $ELAPSED -lt $TIMEOUT ]; do
            # Verifica se o artefato chegou ao destino
            if [ "${{ needs.invocacao-consagrada.outputs.branch_destino }}" != "none" ]; then
              echo "status=sucesso" >> $GITHUB_OUTPUT
              echo "Artefato chegou √† branch: ${{ needs.invocacao-consagrada.outputs.branch_destino }}"
              exit 0
            fi
            
            sleep $INTERVAL
            ELAPSED=$((ELAPSED + INTERVAL))
            echo "Observando... ${ELAPSED}s decorridos"
          done
          
          echo "status=falha" >> $GITHUB_OUTPUT
          exit 1
      
      - name: Registrar observa√ß√£o
        if: success()
        run: |
          echo "‚úì Artefato processado com sucesso"
          echo "Branch destino: ${{ needs.invocacao-consagrada.outputs.branch_destino }}"

  falha-na-invocacao:
    name: Falha na Invoca√ß√£o
    needs: [invocacao-consagrada, observando]
    runs-on: ubuntu-latest
    if: failure()
    
    steps:
      - name: Registrar falha
        run: |
          echo "‚ùå A invoca√ß√£o falhou!"
          echo "Artefato: ${{ needs.invocacao-consagrada.outputs.artefato_nome }}"
          echo "Verifique os logs para mais detalhes"
      
      - name: Criar issue de falha
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üî¥ Falha na Invoca√ß√£o: ${{ needs.invocacao-consagrada.outputs.artefato_nome }}',
              body: 'A invoca√ß√£o do artefato falhou durante o processamento. Verifique os logs da action.',
              labels: ['invocacao-falha', 'bug']
            });

  instrumentos-magicos:
    name: Instrumentos M√°gicos
    needs: [invocacao-consagrada, observando]
    runs-on: ubuntu-latest
    if: success() && needs.invocacao-consagrada.outputs.branch_destino == 'Instrumentos-Magicos'
    outputs:
      artefatos: ${{ steps.listar.outputs.lista }}
    
    steps:
      - name: Checkout da branch
        uses: actions/checkout@v4
        with:
          ref: Instrumentos-Magicos
      
      - name: Listar artefatos
        id: listar
        run: |
          ARTEFATOS=$(find . -name "*.txt" -type f | jq -R -s -c 'split("\n")[:-1]')
          echo "lista=$ARTEFATOS" >> $GITHUB_OUTPUT
          echo "Artefatos encontrados: $ARTEFATOS"

  grimorio:
    name: GRIMORIO
    needs: [invocacao-consagrada, observando]
    runs-on: ubuntu-latest
    if: success() && needs.invocacao-consagrada.outputs.branch_destino == 'GRIMORIO'
    outputs:
      artefatos: ${{ steps.listar.outputs.lista }}
    
    steps:
      - name: Checkout da branch
        uses: actions/checkout@v4
        with:
          ref: GRIMORIO
      
      - name: Listar artefatos
        id: listar
        run: |
          ARTEFATOS=$(find . -name "*.txt" -type f | jq -R -s -c 'split("\n")[:-1]')
          echo "lista=$ARTEFATOS" >> $GITHUB_OUTPUT
          echo "Artefatos encontrados: $ARTEFATOS"

  extraplanares:
    name: ExtraPlanares
    needs: [invocacao-consagrada, observando]
    runs-on: ubuntu-latest
    if: success() && needs.invocacao-consagrada.outputs.branch_destino == 'ExtraPlanares'
    outputs:
      artefatos: ${{ steps.listar.outputs.lista }}
    
    steps:
      - name: Checkout da branch
        uses: actions/checkout@v4
        with:
          ref: ExtraPlanares
      
      - name: Listar artefatos
        id: listar
        run: |
          ARTEFATOS=$(find . -name "*.txt" -type f | jq -R -s -c 'split("\n")[:-1]')
          echo "lista=$ARTEFATOS" >> $GITHUB_OUTPUT
          echo "Artefatos encontrados: $ARTEFATOS"

  empoderar:
    name: Empoderar - ${{ matrix.artefato }}
    needs: instrumentos-magicos
    runs-on: ubuntu-latest
    if: needs.instrumentos-magicos.outputs.artefatos != '[]'
    strategy:
      matrix:
        artefato: ${{ fromJson(needs.instrumentos-magicos.outputs.artefatos) }}
    
    steps:
      - name: Aguardando confirma√ß√£o
        run: |
          echo "‚è∏Ô∏è Artefato '${{ matrix.artefato }}' aguardando empoderamento"
          echo "Esta a√ß√£o ficar√° em suspenso at√© interven√ß√£o manual"

  conjurar:
    name: Conjurar - ${{ matrix.artefato }}
    needs: grimorio
    runs-on: ubuntu-latest
    if: needs.grimorio.outputs.artefatos != '[]'
    strategy:
      matrix:
        artefato: ${{ fromJson(needs.grimorio.outputs.artefatos) }}
    
    steps:
      - name: Aguardando confirma√ß√£o
        run: |
          echo "‚è∏Ô∏è Artefato '${{ matrix.artefato }}' aguardando conjura√ß√£o"
          echo "Esta a√ß√£o ficar√° em suspenso at√© interven√ß√£o manual"

  transcender:
    name: Transcender - ${{ matrix.artefato }}
    needs: extraplanares
    runs-on: ubuntu-latest
    if: needs.extraplanares.outputs.artefatos != '[]'
    strategy:
      matrix:
        artefato: ${{ fromJson(needs.extraplanares.outputs.artefatos) }}
    
    steps:
      - name: Aguardando confirma√ß√£o
        run: |
          echo "‚è∏Ô∏è Artefato '${{ matrix.artefato }}' aguardando transcend√™ncia"
          echo "Esta a√ß√£o ficar√° em suspenso at√© interven√ß√£o manual"
