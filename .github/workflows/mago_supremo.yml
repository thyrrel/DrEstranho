# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃ 🧙 mago_supremo.yml - Ritual Completo de Invocação e Observação           ┃
# ┃ 📍 GitHub Web | Mobile Friendly | 4 linhas de visualização               ┃
# ┃ 🔮 {nome}.txt → Olho → Recipes → Observação → Ramificação Hierárquica    ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

name: Mago Supremo

on:
  workflow_dispatch:
    inputs:
      invocacao:
        description: "📜 Cole o ritual com a tag {nome}.txt (4 linhas visíveis)"
        required: true
        type: string
        default: |

permissions:
  contents: write

jobs:
  invocacao-consagrada:
    name: "🧿 Invocação Consagrada"
    runs-on: ubuntu-latest
    outputs:
      nome_artefato: ${{ steps.extrair.outputs.nome }}
      conteudo_reescrito: ${{ steps.extrair.outputs.conteudo }}
    steps:
      - name: 🔍 Extrair nome do artefato
        id: extrair
        run: |
          # Extrai o nome do {nome}.txt
          TEXTO_COMPLETO='${{ github.event.inputs.invocacao }}'
          echo "🔮 Texto recebido:"
          echo "$TEXTO_COMPLETO"
          
          # Regex para encontrar {nome}.txt
          if [[ "$TEXTO_COMPLETO" =~ \{(.+)\.txt\} ]]; then
            NOME_ARTEFATO="${BASH_REMATCH[1]}"
            echo "✅ Nome extraído: $NOME_ARTEFATO"
          else
            NOME_ARTEFATO="artefato_$(date +%s)"
            echo "⚠️  Nome não encontrado, usando: $NOME_ARTEFATO"
          fi
          
          # Simular reescrita pelo Olho (bin/olhodeagamoto.dart)
          CONTEUDO_REESCRITO="🧿 **CONTEÚDO RESSUSCITADO PELO OLHO**\n\n$TEXTO_COMPLETO\n\n✨ Transformado pelo Olho de Agamoto às $(date)"
          
          echo "nome=$NOME_ARTEFATO" >> $GITHUB_OUTPUT
          echo "conteudo<<EOF" >> $GITHUB_OUTPUT
          echo -e "$CONTEUDO_REESCRITO" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 📖 Escrever na Branch Tutor-Demoníaco
        uses: actions/github-script@v7
        with:
          script: |
            const nome = '${{ steps.extrair.outputs.nome }}';
            const conteudo = `${{ steps.extrair.outputs.conteudo }}`;
            
            try {
              await github.rest.repos.createOrUpdateFileContents({
                owner: context.repo.owner,
                repo: context.repo.repo,
                path: `recipes/${nome}.txt`,
                message: `📜 Artefato ${nome} consagrado pelo Olho`,
                content: Buffer.from(conteudo).toString('base64'),
                branch: 'Tutor-Demoníaco'
              });
              console.log(`✅ Artefato ${nome} escrito em recipes/`);
            } catch (error) {
              console.log('❌ Erro ao escrever artefato:', error);
              throw error;
            }

  observando:
    name: "👁️ Observando"
    runs-on: ubuntu-latest
    needs: invocacao-consagrada
    outputs:
      artefatos_falhos: ${{ steps.verificar.outputs.falhos }}
      artefatos_instrumentos: ${{ steps.verificar.outputs.instrumentos }}
      artefatos_grimorio: ${{ steps.verificar.outputs.grimorio }}
      artefatos_extraplanares: ${{ steps.verificar.outputs.extraplanares }}
    steps:
      - name: 🔎 Verificar Todas as Dimensões
        id: verificar
        run: |
          # Simular verificação do artefato em todas as etapas
          NOME_ARTEFATO='${{ needs.invocacao-consagrada.outputs.nome_artefato }}'
          echo "👁️ Observando trajetória do artefato: $NOME_ARTEFATO"
          
          # Simular verificação em LIMBO (se falhar)
          echo "🔍 Verificando LIMBO..."
          FALHOS="[]"
          INSTRUMENTOS="[]" 
          GRIMORIO="[]"
          EXTRAPLANARES="[]"
          
          # Lógica de observação - simulação
          # Se o artefato parar em qualquer ponto antes do destino
          if [ $(($RANDOM % 3)) -eq 0 ]; then
            echo "❌ Artefato preso no LIMBO"
            FALHOS="[\"$NOME_ARTEFATO\"]"
          else
            echo "✅ Artefato passou pelo LIMBO"
            
            # Verificar se chegou em Instrumentos-Magicos
            if [ $(($RANDOM % 2)) -eq 0 ]; then
              echo "🎵 Artefato chegou em Instrumentos-Magicos"
              INSTRUMENTOS="[\"$NOME_ARTEFATO\"]"
            fi
            
            # Verificar se chegou em GRIMORIO  
            if [ $(($RANDOM % 2)) -eq 0 ]; then
              echo "📖 Artefato chegou em GRIMORIO"
              GRIMORIO="[\"$NOME_ARTEFATO\"]"
            fi
            
            # Verificar se chegou em ExtraPlanares
            if [ $(($RANDOM % 2)) -eq 0 ]; then
              echo "🪐 Artefato chegou em ExtraPlanares"
              EXTRAPLANARES="[\"$NOME_ARTEFATO\"]"
            fi
          fi
          
          echo "falhos=$FALHOS" >> $GITHUB_OUTPUT
          echo "instrumentos=$INSTRUMENTOS" >> $GITHUB_OUTPUT
          echo "grimorio=$GRIMORIO" >> $GITHUB_OUTPUT
          echo "extraplanares=$EXTRAPLANARES" >> $GITHUB_OUTPUT

  falha-invocacao:
    name: "❌ Falha na Invocação"
    runs-on: ubuntu-latest
    needs: observando
    if: ${{ fromJson(needs.observando.outputs.artefatos_falhos) != '[]' }}
    steps:
      - name: 🚨 Registrar Falha
        run: |
          echo "❌ ARTEFATO PRESO NO LIMBO"
          echo "Artefato: ${{ fromJson(needs.observando.outputs.artefatos_falhos)[0] }}"
          echo "Tempo: $(date)"
          echo "Localização: lib/limbo/"
          echo "Status: Invocação Interrompida"

  instrumentos-magicos:
    name: "🎶 Instrumentos-Magicos"
    runs-on: ubuntu-latest
    needs: observando
    if: ${{ fromJson(needs.observando.outputs.artefatos_instrumentos) != '[]' }}
    strategy:
      matrix:
        artefato: ${{ fromJson(needs.observando.outputs.artefatos_instrumentos) }}
    steps:
      - name: ⏳ Aguardando Empoderamento
        run: echo "🎵 Artefato ${{ matrix.artefato }} aguardando empoderamento..."
        
      - name: 🛡️ Empoderar
        run: |
          echo "✨ EMPODERANDO ARTEFATO: ${{ matrix.artefato }}"
          echo "Local: Instrumentos-Magicos/instrumentos/"
          echo "Processo: Infusão de energia arcana"
          echo "Status: Em progresso..."

  grimorio:
    name: "📖 GRIMORIO"
    runs-on: ubuntu-latest
    needs: observando
    if: ${{ fromJson(needs.observando.outputs.artefatos_grimorio) != '[]' }}
    strategy:
      matrix:
        artefato: ${{ fromJson(needs.observando.outputs.artefatos_grimorio) }}
    steps:
      - name: ⏳ Aguardando Conjuração
        run: echo "📖 Artefato ${{ matrix.artefato }} aguardando conjuração..."
        
      - name: 🔮 Conjurar
        run: |
          echo "🔮 CONJURANDO ARTEFATO: ${{ matrix.artefato }}"
          echo "Local: GRIMORIO/rituais/"
          echo "Processo: Ativação de runas ancestrais"
          echo "Status: Encantamento em andamento..."

  extraplanares:
    name: "🪐 ExtraPlanares"
    runs-on: ubuntu-latest
    needs: observando
    if: ${{ fromJson(needs.observando.outputs.artefatos_extraplanares) != '[]' }}
    strategy:
      matrix:
        artefato: ${{ fromJson(needs.observando.outputs.artefatos_extraplanares) }}
    steps:
      - name: ⏳ Aguardando Transcendência
        run: echo "🪐 Artefato ${{ matrix.artefato }} aguardando transcendência..."
        
      - name: 🌌 Transcender
        run: |
          echo "🌌 TRANSCENDENDO ARTEFATO: ${{ matrix.artefato }}"
          echo "Local: ExtraPlanares/extraplanar/"
          echo "Processo: Ascensão dimensional"
          echo "Status: Conexão interdimensional estabelecida..."
