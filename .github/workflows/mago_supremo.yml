# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃ 🧙 mago_supremo.yml – Criação e invocação de rituais dimensionais         ┃
# ┃ 📍 Roda na MAIN | Sem terminal | Sem shell | Apenas GitHub API + Dart     ┃
# ┃ 🔮 byThyrrel | Jobs com nome do artefato | Invocação clicável             ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛

name: Mago Supremo

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: "Cole o conteúdo do ritual (será o .dart)"
        required: true
        type: string
      destino:
        description: "Dimensão final (Instrumentos, GRIMORIO, ExtraPlanares)"
        required: true
        type: string

permissions:
  contents: write

jobs:
  criar_ritual:
    name: ✨ Criar ritual em /rituais/
    runs-on: ubuntu-latest
    outputs:
      nome: ${{ steps.criar.outputs.nome }}
    steps:
      - name: 📜 Criar .dart via GitHub API
        id: criar
        uses: actions/github-script@v7
        with:
          script: |
            const prompt = `${{ inputs.prompt }}`;
            const destino = '${{ inputs.destino }}';
            const nome = 'ritual_' + Math.random().toString(36).slice(2);
            const code = `// Ritual: ${nome}\n${prompt}\nvoid main() => print("${nome} invocado -> ${destino}");`;
            await github.rest.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: `Tutor-Demoníaco/rituais/${nome}.dart`,
              message: `Mago: ritual ${nome} criado para ${destino}`,
              content: Buffer.from(code).toString('base64'),
              branch: 'Tutor-Demoníaco'
            });
            core.setOutput('nome', nome);

  mover_para_limbo:
    name: 🧪 Mover para LIMBO e testar
    needs: criar_ritual
    runs-on: ubuntu-latest
    steps:
      - name: 🔁 Copiar artefato para LIMBO/lib/limbo/
        uses: actions/github-script@v7
        with:
          script: |
            const nome = '${{ needs.criar_ritual.outputs.nome }}';
            const { data: original } = await github.rest.repos.getContent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: `Tutor-Demoníaco/rituais/${nome}.dart`,
              ref: 'Tutor-Demoníaco'
            });
            await github.rest.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: `lib/limbo/${nome}.dart`,
              message: `Mago: ${nome} movido para LIMBO`,
              content: original.content,
              branch: 'LIMBO'
            });

  listar_dimensoes:
    name: 📜 Listar artefatos selados
    needs: mover_para_limbo
    runs-on: ubuntu-latest
    outputs:
      instrumentos: ${{ steps.listas.outputs.instrumentos }}
      grimorio: ${{ steps.listas.outputs.grimorio }}
      extraplanares: ${{ steps.listas.outputs.extraplanares }}
    steps:
      - name: 📚 Listar artefatos por dimensão
        id: listas
        uses: actions/github-script@v7
        with:
          script: |
            async function listar(path, output) {
              try {
                const { data } = await github.rest.repos.getContent({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  path,
                  ref: 'main'
                });
                const nomes = Array.isArray(data)
                  ? data.filter(f => f.name.endsWith('.dart')).map(f => f.name.replace('.dart', ''))
                  : [];
                core.setOutput(output, JSON.stringify(nomes));
              } catch {
                core.setOutput(output, JSON.stringify([]));
              }
            }
            await listar('Instrumentos-Magicos/instrumentos', 'instrumentos');
            await listar('GRIMORIO/rituais', 'grimorio');
            await listar('ExtraPlanares/extraplanar', 'extraplanares');

  invocar_instrumentos:
    name: 🪄 Instrumentos-Mágicos
    needs: listar_dimensoes
    runs-on: ubuntu-latest
    if: fromJson(needs.listar_dimensoes.outputs.instrumentos)[0]
    strategy:
      matrix:
        artefato: ${{ fromJson(needs.listar_dimensoes.outputs.instrumentos) }}
    steps:
      - name: 🔔 Invocar ${{ matrix.artefato }}
        uses: actions/github-script@v7
        with:
          script: |
            core.info(`🔔 Artefato '${{ matrix.artefato }}' invocado da dimensão Instrumentos-Mágicos`);

  invocar_grimorio:
    name: 📖 GRIMORIO
    needs: listar_dimensoes
    runs-on: ubuntu-latest
    if: fromJson(needs.listar_dimensoes.outputs.grimorio)[0]
    strategy:
      matrix:
        artefato: ${{ fromJson(needs.listar_dimensoes.outputs.grimorio) }}
    steps:
      - name: 🔔 Invocar ${{ matrix.artefato }}
        uses: actions/github-script@v7
        with:
          script: |
            core.info(`🔔 Artefato '${{ matrix.artefato }}' invocado da dimensão GRIMORIO`);

  invocar_extraplanares:
    name: 🌌 ExtraPlanares
    needs: listar_dimensoes
    runs-on: ubuntu-latest
    if: fromJson(needs.listar_dimensoes.outputs.extraplanares)[0]
    strategy:
      matrix:
        artefato: ${{ fromJson(needs.listar_dimensoes.outputs.extraplanares) }}
    steps:
      - name: 🔔 Invocar ${{ matrix.artefato }}
        uses: actions/github-script@v7
        with:
          script: |
            core.info(`🔔 Artefato '${{ matrix.artefato }}' invocado da dimensão ExtraPlanares`);
