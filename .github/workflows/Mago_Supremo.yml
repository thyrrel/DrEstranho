# ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
# ┃ 🧙 mago_supremo.yml – Detecta .dart em Tutor-Demoníaco/rituais/           ┃
# ┃ 📍 Roda na MAIN | Move para LIMBO | Lista jobs com NOME do artefato       ┃
# ┃ 🔮 byThyrrel | API GitHub | Sem CLI | Sem txt | Sem falhas                ┃
# ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
name: Mago Supremo

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths: [Tutor-Demoníaco/rituais/*.dart, .github/workflows/mago_supremo.yml]

permissions:
  contents: write

jobs:
  detectar_chegada:
    name: Detectar chegada de .dart
    runs-on: ubuntu-latest
    outputs:
      artefatos: ${{ steps.detect.outputs.artefatos }}
    steps:
      - name: Listar .dart que chegou
        id: detect
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.repos.getContent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: 'Tutor-Demoníaco/rituais',
              ref: 'main'
            });
            const darts = Array.isArray(data) ? data.filter(f => f.name.endsWith('.dart')).map(f => f.name.replace('.dart', '')) : [];
            core.setOutput('artefatos', JSON.stringify(darts));

  mover_para_limbo:
    name: Mover para LIMBO
    needs: detectar_chegada
    runs-on: ubuntu-latest
    if: fromJson(needs.detectar_chegada.outputs.artefatos)[0]
    strategy:
      fail-fast: false
      matrix:
        artefato: ${{ fromJson(needs.detectar_chegada.outputs.artefatos) }}
    steps:
      - name: Mover cópia para LIMBO/lib/limbo/
        uses: actions/github-script@v7
        with:
          script: |
            const nome = '${{ matrix.artefato }}';
            const { data: original } = await github.rest.repos.getContent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: `Tutor-Demoníaco/rituais/${nome}.dart`,
              ref: 'main'
            });
            await github.rest.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: `lib/limbo/${nome}.dart`,
              message: `🔮 Mago: ${nome} movido para LIMBO`,
              content: original.content,
              branch: 'LIMBO'
            });

  testar_limbo:
    name: Testar em LIMBO
    needs: mover_para_limbo
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        artefato: ${{ fromJson(needs.detectar_chegada.outputs.artefatos) }}
    steps:
      - name: Simular teste (sempre aprova)
        run: echo "✅ Test
